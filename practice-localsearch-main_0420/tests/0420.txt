local search
- 언덕 등반 알고리즘
- first-choice 알고리즘 => TSP 그래프 이론에 많이 씀. => 시각화
- steepest  => 경사 하강법 => 수식 => 시각화

경사 하강법
1. 미분 왜? 기울기
2. 하강 => 로스를 찾으려고 오류의 최저점
3. lr 하이퍼파라미터 텐서가 정해주지 않음. 항상 답이 존재하지는 않음. 발산하면 그냥 끝나버림.
전역구간에 해가 있다고 가정함.
몇칸씩 가야 할지는 니가 정해

자바 포보다 포이치 대신 객체여야 하고 인덱스 조작을 포기해야함.

--------------------------------------------------------------------
언덕 등반 => 지역
Frist => 지역(전역) => o.k => 계산이 너무 느려
GD => 계산이 빠름(뺄셈)

--------------------------------------------------------------------
미분은 연속체(field)
- 미분은 연속에서만 가능
- 컴퓨터는 이산시스템(연속이 아님 ==> 미분)
=> 컴퓨터를 만들어줘 => 가산기(덧셈만 가능)
=> 수치미분 => 뺄셈(!)
- 미분은 델타값(현재에서 이전/다음값)

____________________________________________________________________
4,4,4,4
TSP도 시각화로 봐야겠다
TSP를 하면 뭐가 된다는데?
보자!

2 =

AI 프로그래밍
=> 간소화된 Tensorflow